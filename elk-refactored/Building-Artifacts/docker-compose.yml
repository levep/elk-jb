version: '3'
#### for windows:
# export COMPOSE_CONVERT_WINDOWS_PATHS=1
# or SET COMPOSE_CONVERT_WINDOWS_PATHS=1  before starting compose.
# this should solve the volume share issue
services:
  elasticsearch:
 #image:  yanivomc/jb-elk-elasticsearch:1.00
 #   image: docker.elastic.co/elasticsearch/elasticsearch:6.3.2
    build:
      context: ./elasticsearch/
      args:
        ELK_VERSION: 1
    container_name: elasticsearch
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata1:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - elk

### Unmark to add second elastic to cluster

  # elasticsearch2:
  #   build:
  #     context: elasticsearch/
  #     args:
  #       ELK_VERSION: $ELK_VERSION
  #   #container_name: elasticsearch2 
  #   environment:
  #     - cluster.name=docker-cluster
  #     - bootstrap.memory_lock=true
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #     - "discovery.zen.ping.unicast.hosts=elasticsearch"
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   # volumes: #### Remarked for the option of scaling as it is not an option to use the same volume for more then one elastic
  #   #   - esdata2:/usr/share/elasticsearch/data
  #   networks:
  #     - elk     

  logstash:
    build:
      context: logstash/
      args:
        ELK_VERSION: 6.5.4
    image:  yanivomc/jb-elk-logstash-accedient:1.03
    # volumes:
    #   - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
    #   - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
    ports:
      - "5000:5000"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elk
    depends_on:
      - elasticsearch

  kibana:
    build: ./kibana
    # image:  yanivomc/jb-elk-kibana:1.00  
    container_name: kibana 
    # volumes:
    #   - ./kibana/config/:/usr/share/kibana/config:ro
    ports:
      - "5601:5601"
    networks:
      - elk
    depends_on:
      - elasticsearch

      ## Unmark file beat if you wish to load apache content logs to logstash and elastic
  filebeat:
    build:
      context: filebeat/
      args:
        #ELK_VERSION: $ELK_VERSION
        ELK_VERSION: $ELK_VERSION
    image:  yanivomc/jb-elk-filebeat:1.00  
    #volumes:
    #  - ./filebeat/config/:/usr/share/filebeat/filebeat.yml:ro
    networks:
      - elk
    depends_on:
      - elasticsearch



####### Monitoring - Unmark to enable Prometheus and Grafana monitoring
  elasticsearch_exporter:
      image: justwatch/elasticsearch_exporter:1.0.2
      command:
        - '-es.uri=http://elasticsearch:9200'
      restart: always
      ports:
        - "127.0.0.1:9108:9108"
      networks:
        - elk

  prometheus:
      image: yanivomc/prometheus:elk-monitoring-1.0
      environment:
        - ALERTMANAGERURL=alertmanager:9118
      restart: always
      ports:
        - "9090:9090"
      networks:
        - elk
  
  es-monitoring:
      image: yanivomc/es-monitor:elk-monitoring-1.0
      
      restart: always
      networks:
        - elk
      depends_on:
      - elasticsearch


  alertmanager:
      image: yanivomc/alertmanager:elk-monitoring-1.0
      restart: always
      ports:
        - "9118:9118"
      networks:
        - elk
      depends_on:
      - prometheus

  grafana:
      image: grafana/grafana
      restart: always
      ports:
        - "3000:3000"
      networks:
        - elk


networks:

  elk:
    


volumes:
  esdata1:
    driver: local
  esdata2:
    driver: local